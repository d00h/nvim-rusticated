Author:          haystackandroid
Maintainer:      haystackandroid
License:         MIT
Full name:       rusticated
Short name:      rusticated
Terminal Colors: 256

Background: light
Color:      gry0 #d3d2ce ~
Color:      gry1 #c3c0ba ~
Color:      gry2 #5f5a4c ~
Color:      gry3 #444136 ~
Color:      gryc #312d23 ~
Color:      srch #bca964 ~
Color:      grys #312d23 ~
Color:      gryp #989387 ~
Color:      sprd #90001b ~
Color:      spbl #004ba9 ~
Color:      spcy #005a76 ~
Color:      spmg #800c78 ~
Color:      red_ #834742 ~
Color:      gold #645826 ~
Color:      gren #2c633f ~
Color:      cyan #006470 ~
Color:      blue #3c5a89 ~
Color:      mgnt #784872 ~
Include:    _common.colortemplate

verbatim
if has("nvim")
  let g:terminal_color_0 = "@guigry0"
  let g:terminal_color_1 = "@guired_"
  let g:terminal_color_2 = "@guigren"
  let g:terminal_color_3 = "@guigold"
  let g:terminal_color_4 = "@guiblue"
  let g:terminal_color_5 = "@guimgnt"
  let g:terminal_color_6 = "@guicyan"
  let g:terminal_color_7 = "@guigry3"
  let g:terminal_color_8 = "@guigry1"
  let g:terminal_color_9 = "@guired_"
  let g:terminal_color_10 = "@guigren"
  let g:terminal_color_11 = "@guigold"
  let g:terminal_color_12 = "@guiblue"
  let g:terminal_color_13 = "@guimgnt"
  let g:terminal_color_14 = "@guicyan"
  let g:terminal_color_15 = "@guigryc"
elseif has("terminal")
  let g:terminal_ansi_colors = [
      \ "@guigry0",
      \ "@guired_",
      \ "@guigren",
      \ "@guigold",
      \ "@guiblue",
      \ "@guimgnt",
      \ "@guicyan",
      \ "@guigry3",
      \ "@guigry1",
      \ "@guired_",
      \ "@guigren",
      \ "@guigold",
      \ "@guiblue",
      \ "@guimgnt",
      \ "@guicyan",
      \ "@guigryc"
  \ ]
endif
endverbatim

auxfile autoload/airline/themes/rusticated.vim
let g:airline#themes#rusticated#palette = {}

let s:gry0 = [ "@guigry0", @termgry0 ]
let s:gry1 = [ "@guigry1", @termgry1 ]
let s:gry3 = [ "@guigry3", @termgry3 ]
let s:red_ = [ "@guired_", @termred_ ]
let s:gren = [ "@guigren", @termgren ]
let s:blue = [ "@guiblue", @termblue ]

let s:nrm1 = [ s:gry0[0] , s:gry3[0] , s:gry0[1] , s:gry3[1] ]
let s:nrm2 = [ s:gry3[0] , s:gry1[0] , s:gry3[1] , s:gry1[1] ]
let s:insr = [ s:gry0[0] , s:gren[0] , s:gry0[1] , s:gren[1] ]
let s:visl = [ s:gry0[0] , s:blue[0] , s:gry0[1] , s:blue[1] ]
let s:rplc = [ s:gry0[0] , s:red_[0] , s:gry0[1] , s:red_[1] ]
let s:inac = [ s:gry3[0] , s:gry1[0] , s:gry3[1] , s:gry1[1] ]

let g:airline#themes#rusticated#palette.normal =
  \ airline#themes#generate_color_map( s:nrm1 , s:nrm2 , s:nrm2 )

let g:airline#themes#rusticated#palette.insert =
  \ airline#themes#generate_color_map( s:insr , s:nrm2 , s:nrm2 )

let g:airline#themes#rusticated#palette.visual =
  \ airline#themes#generate_color_map( s:visl , s:nrm2 , s:nrm2 )

let g:airline#themes#rusticated#palette.replace =
  \ airline#themes#generate_color_map( s:rplc , s:nrm2 , s:nrm2 )

let g:airline#themes#rusticated#palette.inactive =
  \ airline#themes#generate_color_map( s:inac , s:inac , s:inac )

if !get(g:, "loaded_ctrlp", 0)
  finish
endif

let g:airline#themes#rusticated#palette.ctrlp =
  \ airline#extensions#ctrlp#generate_color_map( s:nrm2 , s:nrm1 , s:nrm2 )
endauxfile

auxfile autoload/lightline/colorscheme/rusticated.vim
let s:gry0 = [ "@guigry0", @termgry0 ]
let s:gry1 = [ "@guigry1", @termgry1 ]
let s:gry3 = [ "@guigry3", @termgry3 ]
let s:red_ = [ "@guired_", @termred_ ]
let s:mgnt = [ "@guimgnt", @termmgnt ]
let s:gren = [ "@guigren", @termgren ]
let s:blue = [ "@guiblue", @termblue ]

let s:p = { "normal" : {} , "inactive": {} , "insert"  : {} ,
          \ "replace": {} , "visual"  : {} , "tabline" : {} }

let s:p.normal.left     = [[ s:gry0, s:gry3 ], [ s:gry3, s:gry1 ]]
let s:p.normal.middle   = [[ s:gry3, s:gry1 ]]
let s:p.normal.right    = [[ s:gry0, s:gry3 ], [ s:gry0, s:gry3 ]]

let s:p.inactive.left   = copy(s:p.normal.middle)
let s:p.inactive.middle = copy(s:p.normal.middle)
let s:p.inactive.right  = copy(s:p.normal.middle)

let s:p.insert.left     = [[ s:gry0, s:gren ]]
let s:p.insert.right    = [[ s:gry0, s:gren ], [ s:gry0, s:gren ]]

let s:p.visual.left     = [[ s:gry0, s:blue ]]
let s:p.visual.right    = [[ s:gry0, s:blue ], [ s:gry0, s:blue ]]

let s:p.replace.left    = [[ s:gry0, s:red_ ]]
let s:p.replace.right   = [[ s:gry0, s:red_ ], [ s:gry0, s:red_ ]]

let s:p.tabline.left    = copy(s:p.normal.middle)
let s:p.tabline.tabsel  = [[ s:gry0, s:gren ]]
let s:p.tabline.right   = copy(s:p.normal.middle)

let s:p.normal.error    = [[ s:red_, s:gry0 ]]
let s:p.normal.warning  = [[ s:mgnt, s:gry0 ]]

let g:lightline#colorscheme#rusticated#palette =
  \ lightline#colorscheme#flatten(s:p)
endauxfile

auxfile shell/rusticated.sh
#!/bin/sh
# base16-shell (https://github.com/chriskempson/base16-shell)
# Base16 Shell template by Chris Kempson (http://chriskempson.com)
# rusticated scheme by haystackandroid (https://github.com/haystackandroid/rusticated)

color00="@guigry0" # Base 00 - Black
color01="@guired_" # Base 08 - Red
color02="@guigren" # Base 0B - Green
color03="@guigold" # Base 0A - Yellow
color04="@guiblue" # Base 0D - Blue
color05="@guimgnt" # Base 0E - Magenta
color06="@guicyan" # Base 0C - Cyan
color07="@guigry3" # Base 05 - White
color08="@guigry1" # Base 03 - Bright Black
color09=$color01 # Base 08 - Bright Red
color10=$color02 # Base 0B - Bright Green
color11=$color03 # Base 0A - Bright Yellow
color12=$color04 # Base 0D - Bright Blue
color13=$color05 # Base 0E - Bright Magenta
color14=$color06 # Base 0C - Bright Cyan
color15="@guigryc" # Base 07 - Bright White
color_foreground="@guigry3" # Base 05
color_background="@guigry0" # Base 00

if [ -n "$TMUX" ]; then
  # Tell tmux to pass the escape sequences through
  # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
  put_template() { printf '\033Ptmux;\033\033]4;%d;rgb:%s\033\033\\\033\\' $@; }
  put_template_var() { printf '\033Ptmux;\033\033]%d;rgb:%s\033\033\\\033\\' $@; }
  put_template_custom() { printf '\033Ptmux;\033\033]%s%s\033\033\\\033\\' $@; }
elif [ "${TERM%%[-.]*}" = "screen" ]; then
  # GNU screen (screen, screen-256color, screen-256color-bce)
  put_template() { printf '\033P\033]4;%d;rgb:%s\007\033\\' $@; }
  put_template_var() { printf '\033P\033]%d;rgb:%s\007\033\\' $@; }
  put_template_custom() { printf '\033P\033]%s%s\007\033\\' $@; }
elif [ "${TERM%%-*}" = "linux" ]; then
  put_template() { [ $1 -lt 16 ] && printf "\e]P%x%s" $1 $(echo $2 | sed "s/\///g"); }
  put_template_var() { true; }
  put_template_custom() { true; }
else
  put_template() { printf '\033]4;%d;rgb:%s\033\\' $@; }
  put_template_var() { printf '\033]%d;rgb:%s\033\\' $@; }
  put_template_custom() { printf '\033]%s%s\033\\' $@; }
fi

# 16 color space
put_template 0  $color00
put_template 1  $color01
put_template 2  $color02
put_template 3  $color03
put_template 4  $color04
put_template 5  $color05
put_template 6  $color06
put_template 7  $color07
put_template 8  $color08
put_template 9  $color09
put_template 10 $color10
put_template 11 $color11
put_template 12 $color12
put_template 13 $color13
put_template 14 $color14
put_template 15 $color15

# foreground / background / cursor color
if [ -n "$ITERM_SESSION_ID" ]; then
  # iTerm2 proprietary escape codes
  put_template_custom Pg @guigry3 # foreground
  put_template_custom Ph @guigry0 # background
  put_template_custom Pi @guigry3 # bold color
  put_template_custom Pj @guiblue # selection color
  put_template_custom Pk @guigry0 # selected text color
  put_template_custom Pl @guigry3 # cursor
  put_template_custom Pm @guigry0 # cursor text
else
  put_template_var 10 $color_foreground
  if [ "$BASE16_SHELL_SET_BACKGROUND" != false ]; then
    put_template_var 11 $color_background
    if [ "${TERM%%-*}" = "rxvt" ]; then
      put_template_var 708 $color_background # internal border (rxvt)
    fi
  fi
  put_template_custom 12 ";7" # cursor (reverse video)
fi

# clean up
unset -f put_template
unset -f put_template_var
unset -f put_template_custom
unset color00
unset color01
unset color02
unset color03
unset color04
unset color05
unset color06
unset color07
unset color08
unset color09
unset color10
unset color11
unset color12
unset color13
unset color14
unset color15
unset color_foreground
unset color_background
endauxfile

auxfile shell/rusticated.fish
# rusticated fish shell theme by haystackandroid (https://github.com/haystackandroid/rusticated)

# normal text
set fish_color_host              @guigry3
set fish_color_normal            @guigry3
set fish_pager_color_completion  @guigry3
set fish_pager_color_description @guigry3

# muted text
set fish_color_autosuggestion    @guigry2
set fish_color_comment           @guigry2

# reverse muted
set fish_pager_color_progress    @guigry0 --background=@guigry2

# underlined text
set fish_color_valid_path        --underline

# highlit text
set fish_color_match             --background=@guigryp
set fish_color_search_match      --background=@guigryp
set fish_color_selection         --background=@guigryp

# red errors/warnings
set fish_color_cancel            @guired_
set fish_color_cwd_root          @guired_
set fish_color_error             @guired_

# gold special elements
set fish_color_redirection       @guigold
set fish_color_escape            @guigold
set fish_color_operator          @guigold
set fish_color_end               @guigold

# green commands/status
set fish_color_command           @guigren
set fish_color_cwd               @guigren
set fish_color_user              @guigren

# cyan parameters
set fish_color_param             @guicyan

# blue quoted strings
set fish_color_quote             @guiblue

# magenta pager name match
set fish_pager_color_prefix      @guimgnt
endauxfile
